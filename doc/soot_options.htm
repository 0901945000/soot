<html>
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
      <title>Soot Command Line Options</title>
      <META NAME="description" CONTENT="Soot command-line options">
      <META NAME="keywords" CONTENT="usage">
      <META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
   </head>
   <LINK REL="STYLESHEET" HREF="soot_options.css">
   <body>
      <H1 ALIGN="CENTER">Soot command-line options</H1>
      <H1>CONTENTS</H1>
      <ul>
         <li><a href="#synopsis">SYNOPSIS</a></li>
         <li><a href="#description">DESCRIPTION</a></li>
         <li><a href="#options">OPTIONS</a><ul>
               <li><a href="#section_1">General Options</a></li>
               <li><a href="#section_2">Input Options</a></li>
               <li><a href="#section_3">Output Options</a></li>
               <li><a href="#section_4">Processing Options</a></li>
               <li><a href="#section_5">Application Mode Options</a></li>
               <li><a href="#section_6">Input Attribute Options</a></li>
               <li><a href="#section_7">Output Attribute Options</a></li>
               <li><a href="#section_8">Annotation Options</a></li>
               <li><a href="#section_9">Miscellaneous Options</a></li>
            </ul>
         </li>
         <li><a href="#phaseOptions">PHASES AND PHASE OPTIONS</a><ul>
               <li><a href="#phase_1">Jimple Body Creation (jb)
                     </a><ul>
                     <li><a href="#phase_1_1">Duplicate CatchAll Trap Remover (jb.dtr)
                           </a></li>
                     <li><a href="#phase_1_2">Empty Switch Eliminator (jb.ese)
                           </a></li>
                     <li><a href="#phase_1_3">Local Splitter (jb.ls)
                           </a></li>
                     <li><a href="#phase_1_4">Jimple Local Aggregator (jb.a)
                           </a></li>
                     <li><a href="#phase_1_5">Unused Local Eliminator (jb.ule)
                           </a></li>
                     <li><a href="#phase_1_6">Type Assigner (jb.tr)
                           </a></li>
                     <li><a href="#phase_1_7">Unsplit-originals Local Packer (jb.ulp)
                           </a></li>
                     <li><a href="#phase_1_8">Local Name Standardizer (jb.lns)
                           </a></li>
                     <li><a href="#phase_1_9">Copy Propagator (jb.cp)
                           </a></li>
                     <li><a href="#phase_1_10">Dead Assignment Eliminator (jb.dae)
                           </a></li>
                     <li><a href="#phase_1_11">Post-copy propagation Unused Local Eliminator (jb.cp-ule)
                           </a></li>
                     <li><a href="#phase_1_12">Local Packer (jb.lp)
                           </a></li>
                     <li><a href="#phase_1_13">Nop Eliminator (jb.ne)
                           </a></li>
                     <li><a href="#phase_1_14">Unreachable Code Eliminator (jb.uce)
                           </a></li>
                     <li><a href="#phase_1_15">Trap Tightener (jb.tt)
                           </a></li>
                  </ul>
               </li>
               <li><a href="#phase_2">Java To Jimple Body Creation (jj)
                     </a><ul>
                     <li><a href="#phase_2_1">Local Splitter (jj.ls)
                           </a></li>
                     <li><a href="#phase_2_2">Jimple Local Aggregator (jj.a)
                           </a></li>
                     <li><a href="#phase_2_3">Unused Local Eliminator (jj.ule)
                           </a></li>
                     <li><a href="#phase_2_4">Type Assigner (jj.tr)
                           </a></li>
                     <li><a href="#phase_2_5">Unsplit-originals Local Packer (jj.ulp)
                           </a></li>
                     <li><a href="#phase_2_6">Local Name Standardizer (jj.lns)
                           </a></li>
                     <li><a href="#phase_2_7">Copy Propagator (jj.cp)
                           </a></li>
                     <li><a href="#phase_2_8">Dead Assignment Eliminator (jj.dae)
                           </a></li>
                     <li><a href="#phase_2_9">Post-copy propagation Unused Local Eliminator (jj.cp-ule)
                           </a></li>
                     <li><a href="#phase_2_10">Local Packer (jj.lp)
                           </a></li>
                     <li><a href="#phase_2_11">Nop Eliminator (jj.ne)
                           </a></li>
                     <li><a href="#phase_2_12">Unreachable Code Eliminator (jj.uce)
                           </a></li>
                  </ul>
               </li>
               <li><a href="#phase_3">Whole Jimple Pre-processing Pack (wjpp)
                     </a><ul>
                     <li><a href="#phase_3_1">Constant reflective method invocation base transformer (wjpp.cimbt)
                           </a></li>
                  </ul>
               </li>
               <li><a href="#phase_4">Whole Shimple Pre-processing Pack (wspp)
                     </a></li>
               <li><a href="#phase_5">Call Graph Constructor (cg)
                     </a><ul>
                     <li><a href="#phase_5_1">Class Hierarchy Analysis (cg.cha)
                           </a></li>
                     <li><a href="#phase_5_2">Spark (cg.spark)
                           </a></li>
                     <li><a href="#phase_5_3">Paddle (cg.paddle)
                           </a></li>
                  </ul>
               </li>
               <li><a href="#phase_6">Whole Shimple Transformation Pack (wstp)
                     </a></li>
               <li><a href="#phase_7">Whole Shimple Optimization Pack (wsop)
                     </a></li>
               <li><a href="#phase_8">Whole-Jimple Transformation Pack (wjtp)
                     </a><ul>
                     <li><a href="#phase_8_1">May Happen in Parallel Analyses (wjtp.mhp)
                           </a></li>
                     <li><a href="#phase_8_2">Lock Allocator (wjtp.tn)
                           </a></li>
                     <li><a href="#phase_8_3">Rename duplicated classes (wjtp.rdc)
                           </a></li>
                  </ul>
               </li>
               <li><a href="#phase_9">Whole-Jimple Optimization Pack (wjop)
                     </a><ul>
                     <li><a href="#phase_9_1">Static Method Binder (wjop.smb)
                           </a></li>
                     <li><a href="#phase_9_2">Static Inliner (wjop.si)
                           </a></li>
                  </ul>
               </li>
               <li><a href="#phase_10">Whole-Jimple Annotation Pack (wjap)
                     </a><ul>
                     <li><a href="#phase_10_1">Rectangular Array Finder (wjap.ra)
                           </a></li>
                     <li><a href="#phase_10_2">Unreachable Method Tagger (wjap.umt)
                           </a></li>
                     <li><a href="#phase_10_3">Unreachable Fields Tagger (wjap.uft)
                           </a></li>
                     <li><a href="#phase_10_4">Tightest Qualifiers Tagger (wjap.tqt)
                           </a></li>
                     <li><a href="#phase_10_5">Call Graph Grapher (wjap.cgg)
                           </a></li>
                     <li><a href="#phase_10_6">Purity Analysis [AM] (wjap.purity)
                           </a></li>
                  </ul>
               </li>
               <li><a href="#phase_11">Shimple Control (shimple)
                     </a></li>
               <li><a href="#phase_12">Shimple Transformation Pack (stp)
                     </a></li>
               <li><a href="#phase_13">Shimple Optimization Pack (sop)
                     </a><ul>
                     <li><a href="#phase_13_1">Shimple Constant Propagator and Folder (sop.cpf)
                           </a></li>
                  </ul>
               </li>
               <li><a href="#phase_14">Jimple Transformation Pack (jtp)
                     </a></li>
               <li><a href="#phase_15">Jimple Optimization Pack (jop)
                     </a><ul>
                     <li><a href="#phase_15_1">Common Subexpression Eliminator (jop.cse)
                           </a></li>
                     <li><a href="#phase_15_2">Busy Code Motion (jop.bcm)
                           </a></li>
                     <li><a href="#phase_15_3">Lazy Code Motion (jop.lcm)
                           </a></li>
                     <li><a href="#phase_15_4">Copy Propagator (jop.cp)
                           </a></li>
                     <li><a href="#phase_15_5">Jimple Constant Propagator and Folder (jop.cpf)
                           </a></li>
                     <li><a href="#phase_15_6">Conditional Branch Folder (jop.cbf)
                           </a></li>
                     <li><a href="#phase_15_7">Dead Assignment Eliminator (jop.dae)
                           </a></li>
                     <li><a href="#phase_15_8">Null Check Eliminator (jop.nce)
                           </a></li>
                     <li><a href="#phase_15_9">Unreachable Code Eliminator 1 (jop.uce1)
                           </a></li>
                     <li><a href="#phase_15_10">Unconditional Branch Folder 1 (jop.ubf1)
                           </a></li>
                     <li><a href="#phase_15_11">Unreachable Code Eliminator 2 (jop.uce2)
                           </a></li>
                     <li><a href="#phase_15_12">Unconditional Branch Folder 2 (jop.ubf2)
                           </a></li>
                     <li><a href="#phase_15_13">Unused Local Eliminator (jop.ule)
                           </a></li>
                  </ul>
               </li>
               <li><a href="#phase_16">Jimple Annotation Pack (jap)
                     </a><ul>
                     <li><a href="#phase_16_1">Null Pointer Checker (jap.npc)
                           </a></li>
                     <li><a href="#phase_16_2">Null Pointer Colourer (jap.npcolorer)
                           </a></li>
                     <li><a href="#phase_16_3">Array Bound Checker (jap.abc)
                           </a></li>
                     <li><a href="#phase_16_4">Profiling Generator (jap.profiling)
                           </a></li>
                     <li><a href="#phase_16_5">Side Effect tagger (jap.sea)
                           </a></li>
                     <li><a href="#phase_16_6">Field Read/Write Tagger (jap.fieldrw)
                           </a></li>
                     <li><a href="#phase_16_7">Call Graph Tagger (jap.cgtagger)
                           </a></li>
                     <li><a href="#phase_16_8">Parity Tagger (jap.parity)
                           </a></li>
                     <li><a href="#phase_16_9">Parameter Alias Tagger (jap.pat)
                           </a></li>
                     <li><a href="#phase_16_10">Live Variables Tagger (jap.lvtagger)
                           </a></li>
                     <li><a href="#phase_16_11">Reaching Defs Tagger (jap.rdtagger)
                           </a></li>
                     <li><a href="#phase_16_12">Cast Elimination Check Tagger (jap.che)
                           </a></li>
                     <li><a href="#phase_16_13">Unreachable Method Transformer (jap.umt)
                           </a></li>
                     <li><a href="#phase_16_14">Loop Invariant Tagger (jap.lit)
                           </a></li>
                     <li><a href="#phase_16_15">Available Expressions Tagger (jap.aet)
                           </a></li>
                     <li><a href="#phase_16_16">Dominators Tagger (jap.dmt)
                           </a></li>
                  </ul>
               </li>
               <li><a href="#phase_17">Grimp Body Creation (gb)
                     </a><ul>
                     <li><a href="#phase_17_1">Grimp Pre-folding Aggregator (gb.a1)
                           </a></li>
                     <li><a href="#phase_17_2">Grimp Constructor Folder (gb.cf)
                           </a></li>
                     <li><a href="#phase_17_3">Grimp Post-folding Aggregator (gb.a2)
                           </a></li>
                     <li><a href="#phase_17_4">Grimp Unused Local Eliminator (gb.ule)
                           </a></li>
                  </ul>
               </li>
               <li><a href="#phase_18">Grimp Optimization (gop)
                     </a></li>
               <li><a href="#phase_19">Baf Body Creation (bb)
                     </a><ul>
                     <li><a href="#phase_19_1">Load Store Optimizer (bb.lso)
                           </a></li>
                     <li><a href="#phase_19_2">Store Chain Optimizer (bb.sco)
                           </a></li>
                     <li><a href="#phase_19_3">Peephole Optimizer (bb.pho)
                           </a></li>
                     <li><a href="#phase_19_4">Unused Local Eliminator (bb.ule)
                           </a></li>
                     <li><a href="#phase_19_5">Local Packer (bb.lp)
                           </a></li>
                  </ul>
               </li>
               <li><a href="#phase_20">Baf Optimization (bop)
                     </a></li>
               <li><a href="#phase_21">Tag Aggregator (tag)
                     </a><ul>
                     <li><a href="#phase_21_1">Line Number Tag Aggregator (tag.ln)
                           </a></li>
                     <li><a href="#phase_21_2">Array Bounds and Null Pointer Check Tag Aggregator (tag.an)
                           </a></li>
                     <li><a href="#phase_21_3">Dependence Tag Aggregator (tag.dep)
                           </a></li>
                     <li><a href="#phase_21_4">Field Read/Write Tag Aggregator (tag.fieldrw)
                           </a></li>
                  </ul>
               </li>
               <li><a href="#phase_22">Dava Body Creation (db)
                     </a><ul>
                     <li><a href="#phase_22_1">Transformations (db.transformations)
                           </a></li>
                     <li><a href="#phase_22_2">Renamer (db.renamer)
                           </a></li>
                     <li><a href="#phase_22_3">De-obfuscate (db.deobfuscate)
                           </a></li>
                     <li><a href="#phase_22_4">Force Recompilability (db.force-recompile)
                           </a></li>
                  </ul>
               </li>
            </ul>
         </li>
      </ul>
      <H1><A NAME="synopsis">SYNOPSIS</A></H1>
      <P>
         Soot is invoked as follows:
         
         <P><CODE>
               java <I>javaOptions</I> soot.Main [ <I>sootOption</I>* ] <I>classname</I>*
               </CODE></P>
      </P>
      <H1><A NAME="description">DESCRIPTION</A></H1>
      <P>
         This manual documents the command line options of the Soot
         bytecode compiler/optimizer tool. In essence, it tells you what you can
         use to replace the <I>sootOption</I> placeholder which appears in the SYNOPSIS.
         
      </P>
      <intro>
         
         <p>
            The descriptions of Soot options talk about three categories of
            classes: argument classes, application classes, and library classes.
            
         </p>
         
         <p>
            <var>Argument classes</var>
            are those you specify explicitly to
            Soot. When you use Soot's command line interface, argument
            classes are those classes which are either listed explicitly on
            the command line or found in a directory specified with the
            <tt>-process-dir</tt>
            option. When you use the Soot's Eclipse
            plug-in, argument classes